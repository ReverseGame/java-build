name: Node CI
on:
  workflow_call:
    inputs:
      projectName:
        required: true
        type: string
      buildStage:
        required: true
        type: string
      envRule:
        required: true
        type: string
      workDir:
        required: true
        type: string
      projectPrefix:
        required: true
        type: string
      eks:
        required: false
        type: boolean
        default: false
      awsRegion:
        required: false
        type: string
      clusterName:
        required: false
        type: string
    secrets:
      webhookFeishu:
        required: true
      dockerUrl:
        required: true
      dockerUsername:
        required: true
      dockerPassword:
        required: true
      dockerRepo:
        required: true
      kubeConfig:
        required: true
      awsAccessKey:
        required: false
      awsSecretKey:
        required: false



jobs:
  node_build:
    environment: ${{ inputs.envRule }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
    env:
      tag: ${{ secrets.dockerUrl }}/${{ secrets.dockerRepo }}/${{ inputs.projectName }}:${{ inputs.buildStage }}-${{ github.sha }}

    steps:
      - name: post message
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 开始构建
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '所属分支: ${{ github.ref }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - uses: actions/checkout@v3
      - name: Write env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_NEXT_PUBLIC_APP_ENV: ${{ vars.NEXT_PUBLIC_APP_ENV }}
          envkey_NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
          envkey_NEXT_PUBLIC_WEB_URL: ${{ vars.NEXT_PUBLIC_WEB_URL }}
          envkey_NEXT_PUBLIC_GA_ID: ${{ vars.NEXT_PUBLIC_GA_ID }}
          envkey_NEXT_PUBLIC_GTM_ID: ${{ vars.NEXT_PUBLIC_GTM_ID }}
          envkey_NEXT_PUBLIC_KLAVIYO_PUBLIC_API_KEY: ${{ vars.KLAVIYO_PUBLIC_API_KEY }}
          envkey_NEXT_PUBLIC_AW: ${{ vars.NEXT_PUBLIC_AW }}
          path: .env

      - uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get pnpm store directory path
        id: pnpm-store-dir-path
        run: echo "::set-output name=dir::$(pnpm store path)"
      - uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: |
            ${{ steps.pnpm-store-dir-path.outputs.dir }}
            ${{ github.workspace }}/.next/cache
          # 每当 pnpm-lock.yaml 或源代码变化时生成新的缓存 key
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # 如果源文件变化但依赖没变，则恢复先前缓存
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - run: pnpm install --frozen-lockfile

      - run: pnpm run build:beta
        if: ${{ inputs.buildStage == 'beta' }}

      - run: pnpm run build
        if: ${{ inputs.buildStage == 'product' }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.dockerUrl }}
          username: ${{ secrets.dockerUsername }}
          password: ${{ secrets.dockerPassword }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3.1.1
        with:
          push: true
          context: .
          file: Dockerfile-${{ inputs.buildStage }}
          tags: ${{ env.tag }}
      - name: post success message
        uses: foxundermoon/feishu-action@v2
        if: ${{ always() }}
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 构建 ${{ job.status }} !
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '所属分支: ${{ github.ref }}'
                - - tag: text
                    text: '部署链接:'
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  deploy_local:
    runs-on: Linux
    if: inputs.buildStage == 'beta' && !inputs.eks
    needs: node_build
    env:
      tag: ${{ secrets.dockerUrl }}/${{ secrets.dockerRepo }}/${{ inputs.projectName }}:${{ inputs.buildStage }}-${{ github.sha }}
    steps:
      - name: post message
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 开始部署
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '所属分支: ${{ github.ref }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - uses: actions/checkout@v3
      - name: deploy to fellas cluster
        uses: znl1087/kubectl@master
        with:
          config: ${{ secrets.kubeConfig }}
          command: --namespace=${{ inputs.projectPrefix }}-${{ inputs.buildStage }} apply -f ./k8s-${{ inputs.buildStage }}.yaml || true
      - name: apply
        uses: znl1087/kubectl@master
        with:
          config: ${{ secrets.kubeConfig }}
          command: --namespace=${{ inputs.projectPrefix }}-${{ inputs.buildStage }} set image deployment/${{ inputs.projectName }} ${{ inputs.projectName }}=${{ env.tag }}
      - name: post success message
        uses: foxundermoon/feishu-action@v2
        if: ${{ always() }}
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 部署 ${{ job.status }} !
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '所属分支: ${{ github.ref }}'
                - - tag: text
                    text: '部署链接:'
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  deploy_product:
    runs-on: ubuntu-latest
    if: inputs.buildStage == 'product' && !inputs.eks
    needs: node_build
    env:
      tag: ${{ secrets.dockerUrl }}/${{ secrets.dockerRepo }}/${{ inputs.projectName }}:${{ inputs.buildStage }}-${{ github.sha }}
    steps:
      - name: post message
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 开始部署
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '所属分支: ${{ github.ref }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - uses: actions/checkout@v3
      - name: deploy to fellas cluster
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.kubeConfig }}
          command: --namespace=${{ inputs.projectPrefix }}-${{ inputs.buildStage }} apply -f ./k8s-${{ inputs.buildStage }}.yaml || true
      - name: apply
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.kubeConfig }}
          command: --namespace=${{ inputs.projectPrefix }}-${{ inputs.buildStage }} set image deployment/${{ inputs.projectName }} ${{ inputs.projectName }}=${{ env.tag }}
      - name: post success message
        uses: foxundermoon/feishu-action@v2
        if: ${{ always() }}
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 部署 ${{ job.status }} !
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '所属分支: ${{ github.ref }}'
                - - tag: text
                    text: '部署链接:'
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  deploy_eks:
    runs-on: ubuntu-latest
    if: inputs.buildStage == 'product' && inputs.eks
    needs: node_build
    env:
      tag: ${{ secrets.dockerUrl }}/${{ secrets.dockerRepo }}/${{ inputs.projectName }}:${{ inputs.buildStage }}-${{ github.sha }}
      aws_region: ${{ inputs.awsRegion }}
    steps:
      - name: post message
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 开始部署
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '所属分支: ${{ github.ref }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.awsAccessKey }}
          aws-secret-access-key: ${{ secrets.awsSecretKey }}
          aws-region: ${{ env.aws_region }}

      - uses: actions/checkout@v3
      - name: create
        uses: ianbelcher/eks-kubectl-action@master
        with:
          cluster_name: ${{ inputs.clusterName }}
          args: --namespace=${{ inputs.projectPrefix }}-${{ inputs.buildStage }} apply -f ./k8s-${{ inputs.buildStage }}.yaml
      - name: apply
        uses: ianbelcher/eks-kubectl-action@master
        with:
          cluster_name: ${{ inputs.clusterName }}
          args: set image deployment/${{ inputs.projectName }} ${{ inputs.projectName }}=${{ env.tag }} --namespace=${{ inputs.projectPrefix }}-${{ inputs.buildStage }}
      - name: post success message
        uses: foxundermoon/feishu-action@v2
        if: ${{ always() }}
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 部署 ${{ job.status }} !
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '所属分支: ${{ github.ref }}'
                - - tag: text
                    text: '部署链接:'
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
