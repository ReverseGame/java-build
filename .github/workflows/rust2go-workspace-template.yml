name: Rust CI

on:
  workflow_call:
    inputs:
      projectName:
        required: true
        type: string
      packageName:
        required: true
        type: string
      buildStage:
        required: true
        type: string
      workDir:
        required: true
        type: string
      dockerDir:
        required: false
        type: string
        default: ''
      dockerfile:
        required: false
        type: string
        default: 'Dockerfile'
      k8sfile:
        required: false
        type: string
        default: 'k8s'
      projectPrefix:
        required: true
        type: string
      eks:
        required: false
        type: boolean
        default: false
      awsRegion:
        required: false
        type: string
      clusterName:
        required: false
        type: string
    secrets:
      webhookFeishu:
        required: true
      dockerUrl:
        required: true
      dockerRepo:
        required: true
      dockerUsername:
        required: true
      dockerPassword:
        required: true
      kubeConfig:
        required: true
      awsAccessKey:
        required: false
      awsSecretKey:
        required: false

jobs:
  build-rust:
    strategy:
      matrix:
        platform: [ ubuntu-22.04 ]
    runs-on: ${{ matrix.platform }}
    env:
      tag: ${{ secrets.dockerUrl }}/${{ secrets.dockerRepo }}/${{ inputs.projectName }}:${{ inputs.buildStage }}-${{ github.sha }}

    steps:
      - name: post messasge
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 开始构建
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - uses: actions/checkout@v3
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: '23.x'
      - name: Install Rust
        run: rustup toolchain install stable --component llvm-tools-preview
      - name: Install Golang
        uses: actions/setup-go@v6
        with:
          go-version: '1.25.1'
      - run: go version
      - run: cargo install --force rust2go-cli

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install openssl
        run: sudo apt-get install libssl-dev libsasl2-dev
      - name: Set up cache
        uses: actions/cache@v3
        continue-on-error: true
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Release
        run: cargo build --release --bin ${{ inputs.packageName }}
      - name: show target
        run: ls -l target/release/ 
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.dockerUrl }}
          username: ${{ secrets.dockerUsername }}
          password: ${{ secrets.dockerPassword }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3.1.1
        with:
          push: true
          context: ${{ inputs.workDir }}
          file: ${{ inputs.workDir }}/${{ inputs.dockerfile }}-${{ inputs.buildStage }}
          tags: ${{ env.tag }}
      - name: post success message
        if: always()
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 构建结果 ${{ job.status }}!
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
                - - tag: text
                    text: '镜像tag: '
                  - tag: text
                    text: ${{ env.tag }}
  deploy_local:
    if: inputs.buildStage == 'beta'
    needs: build-rust
    runs-on: linux
    env:
      tag: ${{ secrets.dockerUrl }}/${{ secrets.dockerRepo }}/${{ inputs.projectName }}:${{ inputs.buildStage }}-${{ github.sha }}
    steps:
      - name: post message
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 开始部署
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - uses: actions/checkout@v3
      - name: deploy to fellas cluster
        uses: znl1087/kubectl@master
        with:
          config: ${{ secrets.kubeConfig }}
          command: --namespace=${{ inputs.projectPrefix }}-${{ inputs.buildStage }} apply -f ./${{ inputs.dockerDir}}${{ inputs.k8sfile }}-${{ inputs.buildStage }}.yaml || true
      - name: apply
        uses: znl1087/kubectl@master
        with:
          config: ${{ secrets.kubeConfig }}
          command: --namespace=${{ inputs.projectPrefix }}-${{ inputs.buildStage }} set image deployment/${{ inputs.projectName }} ${{ inputs.projectName }}=${{ env.tag }}
      - name: post success message
        if: always()
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 部署结果 ${{ job.status }}!
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
                - - tag: text
                    text: '镜像tag: '
                  - tag: text
                    text: ${{ env.tag }}
  deploy_product:
    if: inputs.buildStage == 'product' && !inputs.eks
    needs: build-rust
    runs-on: ubuntu-latest
    env:
      tag: ${{ secrets.dockerUrl }}/${{ secrets.dockerRepo }}/${{ inputs.projectName }}:${{ inputs.buildStage }}-${{ github.sha }}
    steps:
      - name: post message
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 开始部署
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - uses: actions/checkout@v3
      - name: deploy to fellas cluster
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.kubeConfig }}
          command: --namespace=${{ inputs.projectPrefix }}-${{ inputs.buildStage }} apply -f ./${{ inputs.dockerDir}}${{ inputs.k8sfile }}-${{ inputs.buildStage }}.yaml || true
      - name: apply
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.kubeConfig }}
          command: --namespace=${{ inputs.projectPrefix }}-${{ inputs.buildStage }} set image deployment/${{ inputs.projectName }} ${{ inputs.projectName }}=${{ env.tag }}
      - name: post success message
        if: always()
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 部署结果 ${{ job.status }}!
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
                - - tag: text
                    text: '镜像tag: '
                  - tag: text
                    text: ${{ env.tag }}

  deploy_eks:
    if: inputs.buildStage == 'product' && inputs.eks
    needs: build-rust
    runs-on: ubuntu-latest
    env:
      tag: ${{ secrets.dockerUrl }}/${{ secrets.dockerRepo }}/${{ inputs.projectName }}:${{ inputs.buildStage }}-${{ github.sha }}
      aws_region: ${{ inputs.awsRegion }}

    steps:
      - name: post message
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 开始部署
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.awsAccessKey }}
          aws-secret-access-key: ${{ secrets.awsSecretKey }}
          aws-region: ${{ env.aws_region }}
      - uses: actions/checkout@v3
      - name: create 
        uses: ianbelcher/eks-kubectl-action@master
        with:
          cluster_name: ${{ inputs.clusterName }}
          args: --namespace=${{ inputs.projectPrefix }}-${{ inputs.buildStage }} apply -f ./${{ inputs.dockerDir}}${{ inputs.k8sfile }}-${{ inputs.buildStage }}.yaml
      - name: apply
        uses: ianbelcher/eks-kubectl-action@master
        with:
          cluster_name: ${{ inputs.clusterName }}
          args: --namespace=${{ inputs.projectPrefix }}-${{ inputs.buildStage }} set image deployment/${{ inputs.projectName }} ${{ inputs.projectName }}=${{ env.tag }}
      - name: post success message
        if: always()
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 部署结果 ${{ job.status }}!
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
                - - tag: text
                    text: '镜像tag: '
                  - tag: text
                    text: ${{ env.tag }}
