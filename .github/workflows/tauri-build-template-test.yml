name: Tauri CI

on:
    workflow_call:
        inputs:
            buildStage:
                required: true
                type: string
            nodeVersion:
                required: false
                type: string
                default: "lts/*"
            tauriVersion:
                required: false
                type: string
                default: "1"
            awsRegion:
                required: true
                type: string
            buildFeishuWebhook:
                required: false
                type: string
            releaseFeishuWebhook:
                required: false
                type: string
            bucket:
                required: true
                type: string
        secrets:
            awsAccessKey:
                required: true
            awsSecretKey:
                required: true
            patToken:
                required: true

jobs:
    build-tauri:
        outputs:
            product-info: ${{ steps.product-info.outputs.result }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: "rust-windows-test"
                      os: "windows"
                      arch: "x86_64"
                      args: ${{ inputs.buildStage == 'dev' && '-f dev --config ./src-tauri/tauri.conf.dev.json' || inputs.buildStage == 'beta' && '-f beta --config ./src-tauri/tauri.conf.beta.json' || inputs.buildStage == 'product' && '-f product --config ./src-tauri/tauri.conf.json' }}

        runs-on: ${{ matrix.platform }}
        steps:
            - name: Checkout code (检出代码)
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.patToken }}
                  submodules: recursive
            #      - name: Update Rust (更新 Rust)
            #        run: |
            #          rustup update
            - name: Get Project Info
              id: product-info
              uses: actions/github-script@v7
              env:
                  TAURI_VERSION: ${{ inputs.tauriVersion }}
                  BUILD_STAGE: ${{ inputs.buildStage }}
              with:
                  result-encoding: json
                  script: |
                      const version = require('./package.json').version
                      const tauriVersion = process.env.TAURI_VERSION
                      const buildStage = process.env.BUILD_STAGE

                      let configJsonPath = "./src-tauri/tauri.conf.json"

                      if (buildStage === "dev") {
                        configJsonPath = "./src-tauri/tauri.conf.dev.json"
                      } else if (buildStage === "beta") {
                        configJsonPath = "./src-tauri/tauri.conf.beta.json"
                      }



                      let productName = ""
                      if (tauriVersion === "1") {
                        productName = require(configJsonPath).package.productName
                      } else {
                        productName = require(configJsonPath).productName
                      }

                      const linuxFileAppName  = productName
                        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')
                        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')
                        .replace(/[ _.]/g, '-')
                        .replace(/[()[\]{}]/g, '')
                        .toLowerCase();

                      console.log(`version: ${version ? version : '未找到'}`)
                      console.log(`productName: ${productName ? productName : '未找到'}`)
                      console.log(`linuxFileAppName: ${linuxFileAppName ? linuxFileAppName : '未找到'}`)

                      return {
                        version,
                        productName,
                        linuxFileAppName
                      }

            - uses: actions/github-script@v7
              id: message-content
              env:
                  RUN_ID: ${{ github.run_id }}
                  SERVER_URL: ${{ github.server_url }}
                  REPOSITORY: ${{ github.repository }}
              with:
                  result-encoding: json
                  script: |
                      const gh = {
                        server_url: process.env.SERVER_URL,
                        repository: process.env.REPOSITORY,
                        run_id: process.env.RUN_ID
                      }
                      return `**构建链接**\n[点击查看 Actions](${gh.server_url}/${gh.repository}/actions/runs/${gh.run_id})`

            - name: Post Message (发送飞书 Webhook 消息)
              uses: Comori/feishu@v0.0.5
              if: success() && ${{ inputs.buildFeishuWebhook }}
              with:
                  webhook-url: ${{ inputs.buildFeishuWebhook }}
                  msg-type: cardkit
                  cardkit-id: AAq15syMYoq55
                  cardkit-version: 0.0.3
                  content: |
                      title=${{ fromJson(steps.product-info.outputs.result).productName }} ${{ fromJson(steps.product-info.outputs.result).version }} ${{ matrix.os }} 开始构建
                      sub_title=构建流程: ${{ inputs.buildStage }}
                      content=${{ steps.message-content.outputs.result }}

            # - name: Setup Rust (设置 Rust 版本)
            #   if: matrix.platform == 'macos'
            #   uses: dtolnay/rust-toolchain@stable
            #   with:
            #     targets: "aarch64-apple-darwin,x86_64-apple-darwin"

            - name: Setup pnpm (安装 pnpm)
              uses: pnpm/action-setup@v4
              with:
                  version: latest

            - name: Setup node (设置 node 版本)
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ inputs.nodeVersion }}

            - name: Install frontend dependencies (安装前端依赖)
              run: pnpm install

            - name: Build tauri (构建 tauri)
              id: build
              uses: tauri-apps/tauri-action@v0
              continue-on-error: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  TAURI_PRIVATE_KEY: ${{ vars.TAURI_SIGNING_PRIVATE_KEY }}
                  TAURI_KEY_PASSWORD: ${{ vars.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
                  TAURI_SIGNING_PRIVATE_KEY: ${{ vars.TAURI_SIGNING_PRIVATE_KEY }}
                  TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ vars.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
                  RUSTFLAGS: '--cfg env="${{ inputs.buildStage }}"'
                  CARGO_TARGET_DIR: "../../gui/${{ inputs.buildStage }}"
              with:
                  args: ${{ matrix.args }}

            - name: Post Message (发送飞书 Webhook 消息)
              uses: Comori/feishu@v0.0.5
              if: always() && ${{ inputs.buildFeishuWebhook }}
              with:
                  webhook-url: ${{ inputs.buildFeishuWebhook }}
                  msg-type: cardkit
                  cardkit-id: AAq15syMYoq55
                  cardkit-version: 0.0.3
                  content: |
                      title=${{ fromJson(steps.product-info.outputs.result).productName }} ${{ fromJson(steps.product-info.outputs.result).version }} ${{ matrix.os }} ${{ job.status}}
                      sub_title=构建流程: ${{ inputs.buildStage }}
                      content=${{ steps.message-content.outputs.result }}
