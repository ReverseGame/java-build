name: Rust CI

on:
  workflow_call:
    inputs:
      projectName:
        required: true
        type: string
      packageName:
        required: true
        type: string
      buildStage:
        required: true
        type: string
        default: ""
      awsRegion:
        required: true
        type: string
    secrets:
      webhookFeishu:
        required: true
      awsAccessKey:
        required: false
      awsSecretKey:
        required: false

jobs:
  build-rust:
    strategy:
      matrix:
        platform: [ windows-latest ]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: post messasge
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 开始构建
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Set up cache
        uses: actions/cache@v3
        continue-on-error: true
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - name: Build Release
        run: cargo build --release

      - name: Upload artifact product
        if: inputs.buildStage == 'product'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.packageName }}-${{ inputs.buildStage }}-${{ github.ref_name }}.exe
          path: target/release/${{ inputs.packageName }}.exe

      - name: Upload artifact
        if: inputs.buildStage != 'product'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.packageName }}-${{ inputs.buildStage }}.exe
          path: target/release/${{ inputs.packageName }}.exe

      - name: post success message
        if: always()
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 构建结果 ${{ job.status }}!
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  upload:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
    runs-on: ${{ matrix.platform }}
    needs: build-rust

    steps:
      - name: post messasge
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 开始上传
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Download artifact product
        if: inputs.buildStage == 'product'
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.packageName }}-${{ inputs.buildStage }}-${{ github.ref_name }}.exe
          path: ./

      - name: Download artifact
        if: inputs.buildStage != 'product'
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.packageName }}-${{ inputs.buildStage }}.exe
          path: ./
      - name: Display structure of downloaded files
        run: ls -R

      - name: Upload to S3
        if: inputs.buildStage == 'product'
        uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: ./${{ inputs.packageName }}.exe
          destination: s3://xbot/windows/release/${{ inputs.packageName }}-${{  github.ref_name }}.exe
          aws_access_key_id: ${{ secrets.awsAccessKey }}
          aws_secret_access_key: ${{ secrets.awsSecretKey }}
          aws_region: ${{ inputs.awsRegion }}

      - name: Upload to S3
        if: inputs.buildStage != 'product'
        uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: ./${{ inputs.packageName }}.exe
          destination: s3://xbot/windows/${{ inputs.buildStage }}/${{ inputs.packageName }}.exe
          aws_access_key_id: ${{ secrets.awsAccessKey }}
          aws_secret_access_key: ${{ secrets.awsSecretKey }}
          aws_region: ${{ inputs.awsRegion }}

      - name: post success message
        if: always()
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.webhookFeishu }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ inputs.projectName }} 上传结果 ${{ job.status }}!
                content:
                - - tag: text
                    un_escape: true
                    text: '部署环境: ${{ inputs.buildStage }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}